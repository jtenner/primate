import type RequestFacade from "#RequestFacade";
import encodeRequest from "#wasm/encode-request";
import test from "@rcompat/test";

const simpleRequest =  {
  url: new URL("https://primate.io/my/?webserver=forever"),
  body: "Example string body.",
  query: {},
  path: {},
  headers: {},
  cookies: {},
} as unknown as RequestFacade;

const firstExpected = [
  0x00, 0x00, 0x00, 0x00, // url section 0
  0x28, 0x00, 0x00, 0x00, // length of url (40) or 0x28

   0x68,
   0x74,
   0x74,
   0x70,
   0x73,
   0x3a,
   0x2f,
   0x2f,
   0x70,
   0x72,
   0x69,
   0x6d, 
   0x61, 
   0x74, 
   0x65, 
   0x2e, 
   0x69,
   0x6f,
   0x2f,
   0x6d,
   0x79,
   0x2f,
   0x3f,
   0x77,
   0x65,
   0x62,
   0x73,
   0x65,
   0x72,
   0x76,
   0x65,
   0x72,
   0x3d,
   0x66,
   0x6f,
   0x72,
   0x65,
   0x76,
   0x65,
   0x72,
    
  0x01, 0x00, 0x00, 0x00, // body section
  0x01, 0x00, 0x00, 0x00, // body kind string
  0x14, 0x00, 0x00, 0x00, // body length (20) or 0x14
  0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x73, 0x74,
  0x72, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x6f, 0x64, 0x79, 0x2e,
    
  0x02, 0x00, 0x00, 0x00, // path section
  0x00, 0x00, 0x00, 0x00, // no elements
    
  0x03, 0x00, 0x00, 0x00, // query section
  0x00, 0x00, 0x00, 0x00, // no elements
    
  0x04, 0x00, 0x00, 0x00, // header section
  0x00, 0x00, 0x00, 0x00, // no elements
    
  0x05, 0x00, 0x00, 0x00, // cookie section
  0x00, 0x00, 0x00, 0x00, // no elements
];

const firstEncoded = await encodeRequest(simpleRequest);

test.case("simple encode with string body", assert => {
  assert(Array.from(firstEncoded)).equals(firstExpected);
});
